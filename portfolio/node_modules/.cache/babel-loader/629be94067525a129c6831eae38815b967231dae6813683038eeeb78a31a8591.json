{"ast":null,"code":"import Jquerry from \"./Jquerry\";\nfunction MyBackground() {\n  (function ($) {\n    // animated hex background\n    $(document).ready(function () {\n      $('.animated-background').each(function (index) {\n        var cnv = $(\"<canvas></canvas>\").attr(\"id\", \"can\" + index);\n        var colorToUse = \"red\";\n        //   var colorToUse = $(this).attr('data-color');\n        //   if (colorToUse === 'red') {\n        var colorRange = ['rgba(206, 23, 41, 0)', 'rgba(193, 23, 43, 0)'];\n        var strokeColor = 'rgba(206, 23, 41, 1)';\n        //   } else {\n        //     colorRange = ['rgba(245, 245, 245, alp)', 'rgba(229, 229, 229, alp)'];\n        //     strokeColor = 'rgba(245, 245, 245, 0.5)';\n        // //   }\n\n        $(this).prepend(cnv);\n        var can = document.getElementById(\"can\" + index);\n        var w = can.width = $(this).width(),\n          h = can.height = $(this).height(),\n          sum = w + h,\n          ctx = can.getContext('2d'),\n          opts = {\n            side: 16,\n            picksParTick: 8,\n            //originally 5\n            baseTime: 200,\n            addedTime: 5,\n            colors: colorRange,\n            addedAlpha: 1,\n            strokeColor: strokeColor,\n            hueSpeed: .1,\n            repaintAlpha: 1\n          },\n          difX = Math.sqrt(3) * opts.side / 2,\n          difY = opts.side * 3 / 2,\n          rad = Math.PI / 6,\n          cos = Math.cos(rad) * opts.side,\n          sin = Math.sin(rad) * opts.side,\n          hexs = [],\n          tick = 0;\n        function loop() {\n          window.requestAnimationFrame(loop);\n          tick += opts.hueSpeed;\n          ctx.shadowBlur = 0;\n          var backColor;\n          if (colorToUse === 'red') {\n            backColor = 'rgba(0, 0, 0, 0.9)';\n          } else {\n            backColor = 'rgba(225, 225, 225, 0.5)';\n          }\n          ctx.fillStyle = backColor.replace('alp', opts.repaintAlpha);\n          ctx.fillRect(0, 0, w, h);\n          for (var i = 0; i < opts.picksParTick; ++i) hexs[Math.random() * hexs.length | 0].pick();\n          hexs.map(function (hex) {\n            hex.step();\n          });\n        }\n        function Hex(x, y) {\n          this.x = x;\n          this.y = y;\n          this.sum = this.x + this.y;\n          // change between false and true to animate from left to right, or all at once\n          this.picked = false;\n          this.time = 0;\n          this.targetTime = 0;\n          this.xs = [this.x + cos, this.x, this.x - cos, this.x - cos, this.x, this.x + cos];\n          this.ys = [this.y - sin, this.y - opts.side, this.y - sin, this.y + sin, this.y + opts.side, this.y + sin];\n        }\n        Hex.prototype.pick = function () {\n          this.color = opts.colors[Math.random() * opts.colors.length | 0];\n          this.picked = true;\n          this.time = this.time || 0;\n          this.targetTime = this.targetTime || opts.baseTime + opts.addedTime * Math.random() | 0;\n        };\n        Hex.prototype.step = function () {\n          var prop = this.time / this.targetTime;\n          ctx.beginPath();\n          ctx.moveTo(this.xs[0], this.ys[0]);\n          for (var i = 1; i < this.xs.length; ++i) ctx.lineTo(this.xs[i], this.ys[i]);\n          ctx.lineTo(this.xs[0], this.ys[0]);\n          if (this.picked) {\n            ++this.time;\n            if (this.time >= this.targetTime) {\n              this.time = 0;\n              this.targetTime = 0;\n              this.picked = false;\n            }\n            ctx.fillStyle = ctx.shadowColor = this.color.replace('alp', Math.sin(prop * Math.PI));\n            ctx.fill();\n          } else {\n            ctx.strokeStyle = ctx.shadowColor = opts.strokeColor;\n            ctx.stroke();\n          }\n        };\n        for (var x = 0; x < w; x += difX * 2) {\n          var i = 0;\n          for (var y = 0; y < h; y += difY) {\n            ++i;\n            hexs.push(new Hex(x + difX * (i % 2), y));\n          }\n        }\n        loop();\n        window.addEventListener('resize', function () {\n          w = can.width = window.innerWidth;\n          h = can.height = window.innerHeight;\n          sum = w + h;\n          if (can.width < window.innerWidth) {\n            can.alpha = 0.5;\n            can.opacity = 0.5;\n          }\n          hexs.length = 0;\n          for (var x = 0; x < w; x += difX * 2) {\n            var i = 0;\n            for (var y = 0; y < h; y += difY) {\n              ++i;\n              hexs.push(new Hex(x + difX * (i % 2), y));\n            }\n          }\n        });\n      });\n    });\n  })(Jquery);\n}\n_c = MyBackground;\nexport default MyBackground;\nvar _c;\n$RefreshReg$(_c, \"MyBackground\");","map":{"version":3,"names":["Jquerry","MyBackground","$","document","ready","each","index","cnv","attr","colorToUse","colorRange","strokeColor","prepend","can","getElementById","w","width","h","height","sum","ctx","getContext","opts","side","picksParTick","baseTime","addedTime","colors","addedAlpha","hueSpeed","repaintAlpha","difX","Math","sqrt","difY","rad","PI","cos","sin","hexs","tick","loop","window","requestAnimationFrame","shadowBlur","backColor","fillStyle","replace","fillRect","i","random","length","pick","map","hex","step","Hex","x","y","picked","time","targetTime","xs","ys","prototype","color","prop","beginPath","moveTo","lineTo","shadowColor","fill","strokeStyle","stroke","push","addEventListener","innerWidth","innerHeight","alpha","opacity","Jquery","_c","$RefreshReg$"],"sources":["/home/lako/document/site_portfolio/portfolio/src/background/Background.js"],"sourcesContent":["import Jquerry from \"./Jquerry\";\n\nfunction MyBackground(){\n    (function ($) {\n    // animated hex background\n      $(document).ready(function() {\n        $('.animated-background').each(function( index ) {\n          var cnv = $(\"<canvas></canvas>\").attr(\"id\", \"can\"+index);\n    \n          var colorToUse = \"red\";\n        //   var colorToUse = $(this).attr('data-color');\n        //   if (colorToUse === 'red') {\n            var colorRange = ['rgba(206, 23, 41, 0)', 'rgba(193, 23, 43, 0)'];\n            var strokeColor = 'rgba(206, 23, 41, 1)';\n        //   } else {\n        //     colorRange = ['rgba(245, 245, 245, alp)', 'rgba(229, 229, 229, alp)'];\n        //     strokeColor = 'rgba(245, 245, 245, 0.5)';\n        // //   }\n    \n          $(this).prepend(cnv);\n    \n          var can = document.getElementById(\"can\"+index);\n          var w = can.width = $(this).width(),\n          h = can.height = $(this).height(),\n          sum = w + h,\n          ctx = can.getContext('2d'),\n    \n          opts = {\n    \n            side: 16,\n            picksParTick: 8, //originally 5\n            baseTime: 200,\n            addedTime: 5,\n            colors: colorRange,\n            addedAlpha: 1,\n            strokeColor: strokeColor,\n            hueSpeed: .1,\n            repaintAlpha: 1\n          },\n    \n          difX = Math.sqrt(3) * opts.side / 2,\n          difY = opts.side * 3 / 2,\n          rad = Math.PI / 6,\n          cos = Math.cos(rad) * opts.side,\n          sin = Math.sin(rad) * opts.side,\n    \n          hexs = [],\n          tick = 0;\n    \n          function loop() {\n    \n            window.requestAnimationFrame(loop);\n    \n            tick += opts.hueSpeed;\n    \n            ctx.shadowBlur = 0;\n    \n            var backColor;\n            if (colorToUse === 'red') {\n              backColor = 'rgba(0, 0, 0, 0.9)';\n            }\n            else {\n              backColor = 'rgba(225, 225, 225, 0.5)';\n            }\n            ctx.fillStyle = backColor.replace('alp', opts.repaintAlpha);\n            ctx.fillRect(0, 0, w, h);\n    \n            for (var i = 0; i < opts.picksParTick; ++i)\n              hexs[(Math.random() * hexs.length) | 0].pick();\n    \n            hexs.map(function(hex) {\n              hex.step();\n            });\n          }\n    \n          function Hex(x, y) {\n    \n            this.x = x;\n            this.y = y;\n            this.sum = this.x + this.y;\n            // change between false and true to animate from left to right, or all at once\n            this.picked = false;\n            this.time = 0;\n            this.targetTime = 0;\n    \n            this.xs = [this.x + cos, this.x, this.x - cos, this.x - cos, this.x, this.x + cos];\n            this.ys = [this.y - sin, this.y - opts.side, this.y - sin, this.y + sin, this.y + opts.side, this.y + sin];\n          }\n          Hex.prototype.pick = function() {\n    \n            this.color = opts.colors[(Math.random() * opts.colors.length) | 0];\n            this.picked = true;\n            this.time = this.time || 0;\n            this.targetTime = this.targetTime || (opts.baseTime + opts.addedTime * Math.random()) | 0;\n          }\n          Hex.prototype.step = function() {\n    \n            var prop = this.time / this.targetTime;\n    \n            ctx.beginPath();\n            ctx.moveTo(this.xs[0], this.ys[0]);\n            for (var i = 1; i < this.xs.length; ++i)\n              ctx.lineTo(this.xs[i], this.ys[i]);\n            ctx.lineTo(this.xs[0], this.ys[0]);\n    \n            if (this.picked) {\n    \n              ++this.time;\n    \n              if (this.time >= this.targetTime) {\n    \n                this.time = 0;\n                this.targetTime = 0;\n                this.picked = false;\n              }\n    \n              ctx.fillStyle = ctx.shadowColor = this.color.replace('alp', Math.sin(prop * Math.PI));\n              ctx.fill();\n            } else {\n    \n              ctx.strokeStyle = ctx.shadowColor = opts.strokeColor;\n              ctx.stroke();\n            }\n          }\n    \n          for (var x = 0; x < w; x += difX * 2) {\n            var i = 0;\n    \n            for (var y = 0; y < h; y += difY) {\n              ++i;\n              hexs.push(new Hex(x + difX * (i % 2), y));\n    \n            }\n          }\n          loop();\n    \n          window.addEventListener('resize', function() {\n    \n            w = can.width = window.innerWidth;\n            h = can.height = window.innerHeight;\n            sum = w + h;\n    \n            if (can.width < window.innerWidth) {\n              can.alpha = 0.5;\n              can.opacity = 0.5;\n            }\n    \n            hexs.length = 0;\n            for (var x = 0; x < w; x += difX * 2) {\n              var i = 0;\n    \n              for (var y = 0; y < h; y += difY) {\n                ++i;\n                hexs.push(new Hex(x + difX * (i % 2), y));\n    \n              }\n            }\n          });\n        });\n      });\n    })(Jquery);\n}\n\nexport default MyBackground;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}